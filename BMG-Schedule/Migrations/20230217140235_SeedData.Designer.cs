// <auto-generated />
using System;
using BMG_Schedule.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BMG_Schedule.Migrations
{
    [DbContext(typeof(EmployeeManagerDbContext))]
    [Migration("20230217140235_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BMG_Schedule.Data.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Миглена",
                            LastName = "Велева"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Иван",
                            LastName = "Петров"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Никола",
                            LastName = "Попов"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Стефка",
                            LastName = "Стоянова"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Мария",
                            LastName = "Донева"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Георги",
                            LastName = "Митев"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Петър",
                            LastName = "Николов"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Павел",
                            LastName = "Попов"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Стоян",
                            LastName = "Константинов"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Галя",
                            LastName = "Стоянова"
                        });
                });

            modelBuilder.Entity("BMG_Schedule.Data.Models.RecordType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RecordTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Работен ден"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Командировка"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Отпуск - платен"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Отпуск - неплатен"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Болнични"
                        });
                });

            modelBuilder.Entity("BMG_Schedule.Data.Models.WorkingDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorkingDays");
                });

            modelBuilder.Entity("BMG_Schedule.Data.Models.WorkingDay", b =>
                {
                    b.HasOne("BMG_Schedule.Data.Models.Employee", null)
                        .WithMany("WorkingDays")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BMG_Schedule.Data.Models.Employee", b =>
                {
                    b.Navigation("WorkingDays");
                });
#pragma warning restore 612, 618
        }
    }
}
